openapi: 3.0.0
info:
  title: Felparkering API
  description: Rest API för att hantera felparkerade fordon
  contact: {}
  version: '1.0'
servers:
  - url: http://localhost:8080
    variables: {}
paths:
  /login:
    post:
      tags:
        - Auth
      summary: Login user
      description: |-
        ### POST /login

        Loggar in användare med e-post och lösenord.  
        Returnerar en JWT-token som används för autentisering.
      operationId: Loginuser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@example.com
                password:
                  type: string
                  example: abc123
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/LoginResponse'
                  - example:
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6...
                      email: user@example.com
                      role: CUSTOMER
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6...
                email: user@example.com
                role: CUSTOMER
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorMissingCredentials'
                  - example:
                      error: Missing credentials
              example:
                error: Missing credentials
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorInvalidCredentials'
                  - example:
                      error: Invalid credentials
              example:
                error: Invalid credentials
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - example:
                      error: User not found
              example:
                error: User not found
      deprecated: false
      security: []
  /register:
    post:
      tags:
        - Auth
      summary: Register new user
      description: |-
        ### POST /register

        Registrerar en användare (CUSTOMER) med e-post och lösenord.
      operationId: Registernewuser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@example.com
                password:
                  type: string
                  example: abc123
                confpassword:
                  type: string
                  example: abc123
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/RegisterResponse'
                  - example:
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6...
                      message: User registered successfully
                      email: user@example.com
                      role: CUSTOMER
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6...
                message: User registered successfully
                email: user@example.com
                role: CUSTOMER
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMissingCredentials'
                  - $ref: '#/components/schemas/ErrorPasswordsDontMatch'
              examples:
                missingCredentials: 
                  summary: Missing credentials
                  value:
                    error: Missing credentials
                passwordMismatch:
                  summary: Password and confirmation does not match
                  value:
                    error: Password and confirmation does not match
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorUserConflict'
                  - example:
                      message: 
                      error: User already exists
              example:
                error: User already exists
      deprecated: false
  /reports:
    post:
      tags:
        - Reports
      summary: Create new report
      description: |-
        ### POST /reports

        Skapar en felparkeringsrapport.

        #### Behörighet:

        - `ADMIN`: Ja
            
        - `ATTENDANT`: Nej (403)
            
        - `CUSTOMER`: Ja
      operationId: Createnewreport
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: string
                  example: Södra vägen 1, Stad
                licensePlate:
                  type: string
                  example: ABC123
                category:
                  type: string
                  example: Blockerar utfart
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ReportCreatedResponse'
                  - example:
                      message: Report created successfully
                      createdOn: '2025-06-17T14:22:00'
              example:
                message: Report created successfully
                createdOn: '2025-06-17T14:22:00'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorMissingCredentials'
                  - example:
                      error: Missing credentials
              example:
                error: Missing credentials
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - example:
                      error: Missing or invalid token
              example:
                error: Missing or invalid token
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorAccessDenied'
                  - example:
                      error: You do not have permission to create a report
              example:
                error: You do not have permission to create a report
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Reports
      summary: Get all reports
      description: |-
        ### GET /reports

        Hämtar en lista med alla felparkeringsrapporter.

        #### Behörighet:

        Roll:

        - `ADMIN`: Ser alla rapporter
            
        - `ATTENDANT`: Ser endast rapporter för sin egen vaktgrupp
            
        - `CUSTOMER`: Ser endast rapporter som de har skapat
      operationId: Getallreports
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
                description: ''
                example:
                  - id: 12
                    location: Södra vägen 1, Stad
                    licensePlate: ABC123
                    category: Blockerar utfart
                    createdOn: '2025-06-17T14:22:00'
                    updatedOn: '2025-06-17T14:22:00'
                    status: NEW
                    attendantGroup:
                      id: 1
                      namn: Stockholm Södra
                    assignedTo: 7
                  - id: 13
                    location: Norra vägen 3, Stad
                    licensePlate: ABC123
                    category: Saknar tillstånd
                    createdOn: '2025-06-17T15:17:00'
                    updatedOn: '2025-06-17T15:17:00'
                    status: NEW
                    attendantGroup:
                      id: 1
                      namn: Stockholm Södra
                    assignedTo: 7
              example:
                - id: 12
                  location: Södra vägen 1, Stad
                  licensePlate: ABC123
                  category: Blockerar utfart
                  createdOn: '2025-06-17T14:22:00'
                  updatedOn: '2025-06-17T14:22:00'
                  status: NEW
                  attendantGroup:
                    id: 1
                    namn: Stockholm Södra
                  assignedTo: 7
                - id: 13
                  location: Norra vägen 3, Stad
                  licensePlate: ABC123
                  category: Saknar tillstånd
                  createdOn: '2025-06-17T15:17:00'
                  updatedOn: '2025-06-17T15:17:00'
                  status: NEW
                  attendantGroup:
                    id: 1
                    namn: Stockholm Södra
                  assignedTo: 7
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - example:
                      error: Missing or invalid token
              example:
                error: Missing or invalid token
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorAccessDenied'
                  - example:
                      error: You do not have permission to get all reports
              example:
                error: You do not have permission to get all reports
      deprecated: false
      security:
        - bearer: []
  /reports/{id}:
    get:
      tags:
        - Reports
      summary: Get a report
      description: |-
        ### GET /reports/{id}

        Hämtar detaljerad information om en specifik felparkeringsrapport.

        #### Behörighet:

        - `ADMIN`: Har tillgång till alla rapporter
            
        - `ATTENDANT`: Har tillgång om rapporten tillhör samma vaktgrupp
            
        - `CUSTOMER`: Har tillgång om rapporten är skapad av användaren
            

        #### Parameter

        - `id` _(Long)_ – rapportens ID
      operationId: Getareport
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Report'
                  - example:
                      id: 12
                      location: Södra vägen 1, Stad
                      licensePlate: ABC123
                      category: Blockerar utfart
                      createdOn: '2025-06-17T14:22:00'
                      updatedOn: '2025-06-17T14:22:00'
                      status: NEW
                      attendantGroup:
                        id: 1
                        namn: Stockholm Södra
                      assignedTo: 7
              example:
                id: 12
                location: Södra vägen 1, Stad
                licensePlate: ABC123
                category: Blockerar utfart
                createdOn: '2025-06-17T14:22:00'
                updatedOn: '2025-06-17T14:22:00'
                status: NEW
                attendantGroup:
                  id: 1
                  namn: Stockholm Södra
                assignedTo: 7
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - example:
                      error: Missing or invalid token
              example:
                error: Missing or invalid token
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorAccessDenied'
                  - example:
                      error: You do not have permission to get a report
              example:
                error: You do not have permission to get a report
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - example:
                      error: Report not found
              example:
                error: Report not found
      deprecated: false
      security:
        - bearer: []
    put:
      tags:
        - Reports
      summary: Update report status
      description: |-
        ### PUT/reports/{id}

        Uppdaterar informationen för en specifik felanmälan, t.ex. ändrar dess status.

        #### Behörighet:

        - `ADMIN`: kan uppdatera alla fält
            
        - `ATTENDANT`: kan ändra status om rapporten tillhör deras vaktgrupp
            
        - `CUSTOMER`: ej tillåtet (403)
            

        #### Parameter

        - `id` _(Long)_ – rapportens ID
      operationId: Updatereportstatus
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorAccessDenied'
                  - example:
                      error: You do not have permission to update a report
              example:
                error: You do not have permission to update a report
        '200':
          description: Ok
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Report'
                  - example:
                      id: 12
                      location: Södra vägen 1, Stad
                      licensePlate: ABC123
                      category: Blockerar utfart
                      createdOn: '2025-06-17T14:22:00'
                      updatedOn: '2025-06-17T14:22:00'
                      status: NEW
                      attendantGroup:
                        id: 1
                        namn: Stockholm Södra
                      assignedTo: 7
              example:
                id: 12
                location: Södra vägen 1, Stad
                licensePlate: ABC123
                category: Blockerar utfart
                createdOn: '2025-06-17T14:22:00'
                updatedOn: '2025-06-17T14:22:00'
                status: NEW
                attendantGroup:
                  id: 1
                  namn: Stockholm Södra
                assignedTo: 7
      deprecated: false
      security:
        - bearer: []
  /admin/attendant:
    post:
      tags:
        - Admin
      summary: Create Attendant
      description: |-
        ### POST /admin/attendant

        Skapar en parkeringsvakt och tilldelar den en vaktgrupp.

        #### Behörighet:

        - `ADMIN`: Ja
            
        - `ATTENDANT`: Nej (403)
            
        - `CUSTOMER`: Nej (403)
      operationId: CreateAttendant
      parameters: []
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AttendantCreatedResponse'
                  - example:
                      message: Vakt registrerad
                      email: vakt@example.com
                      attendantGroup:
                        id: 1
                        namn: Stockholm Södra
              example:
                message: Vakt registrerad
                email: vakt@example.com
                attendantGroup:
                  id: 1
                  namn: Stockholm Södra
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorMissingCredentials'
                  - example:
                      error: Missing credentials
              example:
                error: Missing credentials
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - example:
                      error: Missing or invalid token
              example:
                error: Missing or invalid token
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorAccessDenied'
                  - example:
                      error: You do not have permission to create an attendant
              example:
                error: You do not have permission to create an attendant
      deprecated: false
      security:
        - bearer: []
  /admin/users:
    get:
      tags:
        - Admin
      summary: Get all users
      description: |-
        ### GET /admin/users

        Hämtar en lista med alla användare.

        #### Behörighet:

        Roll:

        - `ADMIN`: ser alla användare
            
        - `ATTENDANT`: ej tillåten (403)
            
        - `CUSTOMER`: ej tillåten (403)
      operationId: Getallusers
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                description: ''
                example:
                  - id: 1
                    email: Stockholm Södra
                    role: CUSTOMER
                    attendantGroup: null
                  - id: 7
                    email: Stockholm Norra
                    role: ATTENDANT
                    attendantGroup:
                      id: 1
                      namn: Stockholm Södra
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - example:
                      error: Missing or invalid token
              example:
                error: Missing or invalid token
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorAccessDenied'
                  - example:
                      error: You do not have permission to get all users
              example:
                error: You do not have permission to get all users
      deprecated: false
      security:
        - bearer: []
  /admin/users/{id}:
    delete:
      tags:
        - Admin
      summary: Delete user
      description: |-
        ### DELETE /admin/users/{id}

        Tar bort en användare med {id}.

        #### Behörighet:

        - `ADMIN`: Ja
            
        - `ATTENDANT`: ej tillåtet (403)
            
        - `CUSTOMER`: ej tillåtet (403)
            

        #### Parameter

        - `id` _(Long)_ – användarens ID
      operationId: Deleteuser
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeletedResponse'
                  - example:
                      message: User was successfully deleted
              example:
                message: User was successfully deleted
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - example:
                      error: Missing or invalid token
              example:
                error: Missing or invalid token
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorAccessDenied'
                  - example:
                      error: You do not have permission to delete a user
              example:
                error: You do not have permission to delete a user
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - example:
                      error: User not found
              example:
                error: User not found
      deprecated: false
      security:
        - bearer: []
  /admin/attendants:
    post:
      tags:
        - Admin
      summary: Create Attendant Group
      description: |-
        ### POST /admin/attendants

        Skapar en ny vaktgrupp.

        #### Behörighet:

        - `ADMIN`: Ja
            
        - `ATTENDANT`: Nej (403)
            
        - `CUSTOMER`: Nej (403)
      operationId: CreateAttendantGroup
      parameters: []
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AttendantGroupCreatedResponse'
                  - example:
                      message: Attendant group was successfully created
                      id: 1
                      namn: Stockholm Södra
              example:
                message: Attendant group was successfully created
                id: 1
                namn: Stockholm Södra
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorMissingCredentials'
                  - example:
                      error: Missing credentials
              example:
                error: Missing credentials
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - example:
                      error: Missing or invalid token
              example:
                error: Missing or invalid token
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorAccessDenied'
                  - example:
                      error: You do not have permission to create an attendant group
              example:
                error: You do not have permission to create an attendant group
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Admin
      summary: Get all Attendant Groups
      description: |-
        ### GET /admin/attendants

        Hämtar en lista med alla vaktgrupper.

        #### Behörighet:

        Roll:

        - `ADMIN`: ser alla vaktgrupper
            
        - `ATTENDANT`: ej tillåten (403)
            
        - `CUSTOMER`: ej tillåten (403)
      operationId: GetallAttendantGroups
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttendantGroup'
                description: ''
                example:
                  - id: 1
                    namn: Stockholm Södra
                  - id: 2
                    namn: Stockholm Norra
              example:
                - id: 1
                  namn: Stockholm Södra
                - id: 2
                  namn: Stockholm Norra
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - example:
                      error: Missing or invalid token
              example:
                error: Missing or invalid token
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorAccessDenied'
                  - example:
                      error: You do not have permission to get all attendant groups
              example:
                error: You do not have permission to get all attendant groups
      deprecated: false
      security:
        - bearer: []
  /admin/attendants/{id}:
    delete:
      tags:
        - Admin
      summary: Delete Attendant Group
      description: |-
        ### DELETE /admin/attendants/{id}

        Tar bort en vaktgrupp med {id}.

        #### Behörighet:

        - `ADMIN`: Ja
            
        - `ATTENDANT`: ej tillåtet (403)
            
        - `CUSTOMER`: ej tillåtet (403)
            

        #### Parameter

        - `id` _(Long)_ – vaktgruppens ID
      operationId: DeleteAttendantGroup
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DeletedResponse'
                  - example:
                      message: Attendant group was successfully deleted
              example:
                message: Attendant group was successfully deleted
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - example:
                      error: Missing or invalid token
              example:
                error: Missing or invalid token
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorAccessDenied'
                  - example:
                      error: You do not have permission to delete an attendant group
              example:
                error: You do not have permission to delete an attendant group
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - example:
                      error: Attendant group not found
              example:
                error: Attendant group not found
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    LoginResponse:
      title: LoginResponse
      required:
        - token
        - email
        - role
      type: object
      properties:
        token:
          type: string
        email:
          type: string
        role:
          type: string
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6...
        email: user@example.com
        role: CUSTOMER
    ErrorMissingCredentials:
      title: ErrorMissingCredentials
      required:
        - error
      type: object
      properties:
        error:
          type: string
      example:
        error: Missing credentials
    ErrorInvalidCredentials:
      title: ErrorInvalidCredentials
      required:
        - error
      type: object
      properties:
        error:
          type: string
      example:
        error: Invalid credentials
    ErrorNotFound:
      title: ErrorNotFound
      required:
        - error
      type: object
      properties:
        error:
          type: string
      example:
        error: User not found
    ErrorUserConflict:
      title: ErrorUserConflict
      required:
        - message
      type: object
      properties:
        error:
          type: string
      example:
        error: User already exists
    ErrorPasswordsDontMatch:
      title: ErrorPasswordsDontMatch
      required:
        - message
      type: object
      properties:
        error:
          type: string
      example:
        error: Password and confirmation does not match
    RegisterResponse:
      title: RegisterResponse
      required:
        - token
        - message
        - email
        - role
      type: object
      properties:
        token:
          type: string
        message:
          type: string
        email:
          type: string
        role:
          type: string
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6...
        message: User registered successfully
        email: user@example.com
        role: CUSTOMER
    ReportCreatedResponse:
      title: ReportCreatedResponse
      required:
        - message
        - createdOn
      type: object
      properties:
        message:
          type: string
        createdOn:
          type: string
      example:
        message: Report created successfully
        createdOn: '2025-06-17T14:22:00'
    AttendantGroup:
      title: AttendantGroup
      required:
        - id
        - namn
      type: object
      properties:
        id:
          type: integer
          format: int32
        namn:
          type: string
      example:
        id: 1
        namn: Stockholm Södra
    ErrorUnauthorized:
      title: ErrorUnauthorized
      required:
        - error
      type: object
      properties:
        error:
          type: string
      example:
        error: Missing or invalid token
    ErrorAccessDenied:
      title: ErrorAccessDenied
      required:
        - error
      type: object
      properties:
        error:
          type: string
      example:
        error: You do not have permission to create a report
    Report:
      title: Report
      required:
        - id
        - location
        - licensePlate
        - category
        - createdOn
        - updatedOn
        - status
        - attendantGroup
        - assignedTo
      type: object
      properties:
        id:
          type: integer
          format: int32
        location:
          type: string
        licensePlate:
          type: string
        category:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        status:
          type: string
        attendantGroup:
          $ref: '#/components/schemas/AttendantGroup'
        assignedTo:
          $ref: '#/components/schemas/User'
      example:
        id: 12
        location: Södra vägen 1, Stad
        licensePlate: ABC123
        category: Blockerar utfart
        createdOn: '2025-06-17T14:22:00'
        updatedOn: '2025-06-17T14:22:00'
        status: NEW
        attendantGroup:
          id: 1
          namn: Stockholm Södra
        assignedTo: 7
    AttendantCreatedResponse:
      title: AttendantCreatedResponse
      required:
        - message
        - email
        - attendantGroup
      type: object
      properties:
        message:
          type: string
        email:
          type: string
        attendantGroup:
          $ref: '#/components/schemas/AttendantGroup'
      example:
        message: Vakt registrerad
        email: vakt@example.com
        attendantGroup:
          id: 1
          namn: Stockholm Södra
    User:
      title: User
      required:
        - id
        - email
        - role
        - attendantGroup
      type: object
      properties:
        id:
          type: integer
          format: int32
        email:
          type: string
        role:
          type: string
        attendantGroup:
          oneOf:
            - allOf:
                - $ref: '#/components/schemas/AttendantGroup'
                - example:
                    id: 1
                    namn: Stockholm Södra
            - nullable: true
      example:
          id: 7
          email: Stockholm Norra
          role: ATTENDANT
          attendantGroup:
            id: 1
            namn: Stockholm Södra
    DeletedResponse:
      title: DeletedResponse
      required:
        - message
      type: object
      properties:
        message:
          type: string
      example:
        message: User was successfully deleted
    AttendantGroupCreatedResponse:
      title: AttendantGroupCreatedResponse
      required:
        - message
        - id
        - namn
      type: object
      properties:
        message:
          type: string
        id:
          type: integer
          format: int32
        namn:
          type: string
      example:
        message: Attendant group was successfully created
        id: 1
        namn: Stockholm Södra
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
  - name: Reports
  - name: Admin